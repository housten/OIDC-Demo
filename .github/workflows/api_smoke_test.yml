name: API smoke test

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:

env:
  API_BASE_URL: ${{ vars.API_BASE_URL }}
  API_SCOPE: ${{ vars.API_SCOPE }}

jobs:
  call-protected-api:
    runs-on: ubuntu-latest
    steps:
      - name: Validate configuration
        run: |
          if [ -z "$API_BASE_URL" ] || [ -z "$API_SCOPE" ]; then
            echo "API_BASE_URL and API_SCOPE repository variables must be configured." >&2
            exit 1
          fi

      - name: Login with workload identity
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_APP_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true

      - name: Request access token
        id: token
        run: |
          access_token=$(az account get-access-token --scope "$API_SCOPE" --query accessToken -o tsv)
          if [ -z "$access_token" ]; then
            echo "Failed to request access token." >&2
            exit 1
          fi
          echo "::add-mask::$access_token"
          echo "token=$access_token" >> "$GITHUB_OUTPUT"

      - name: Submit sample test result
        id: submit
        env:
          TOKEN: ${{ steps.token.outputs.token }}
        run: |
          payload=$(jq -n \
            --arg buildId "gha-${GITHUB_RUN_NUMBER}" \
            --arg testName "WorkflowSmokeTest" \
            --arg outcome "Passed" \
            --arg completedAt "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
            --argjson durationSeconds 42 \
            '{buildId: $buildId, testName: $testName, outcome: $outcome, durationSeconds: $durationSeconds, completedAt: $completedAt}')

          echo "$payload" | jq '.' > api-request.json

          http_status=$(curl -sS -o submit-response.json -w "%{http_code}" \
            -X POST "$API_BASE_URL/api/tests/result" \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json" \
            -d "$payload")

          echo "HTTP status: $http_status"
          if [ "$http_status" -ge 400 ]; then
            echo "Request failed" >&2
            cat submit-response.json >&2
            exit 1
          fi
          echo "status=$http_status" >> "$GITHUB_OUTPUT"

      - name: Fetch metrics summary
        id: summary
        env:
          TOKEN: ${{ steps.token.outputs.token }}
        run: |
          http_status=$(curl -sS -o summary.json -w "%{http_code}" \
            -H "Authorization: Bearer $TOKEN" \
            "$API_BASE_URL/api/tests/summary")

          echo "HTTP status: $http_status"
          cat summary.json
          if [ "$http_status" -ne 200 ]; then
            exit 1
          fi
          echo "status=$http_status" >> "$GITHUB_OUTPUT"

      - name: Upload run artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-smoke-test
          retention-days: 5
          path: |
            api-request.json
            submit-response.json
            summary.json

      - name: Record workflow summary
        run: |
          {
            echo "### API smoke test"
            echo
            echo "**Base URL:** $API_BASE_URL"
            echo
            echo "#### Submitted payload"
            cat api-request.json | jq '.'
            echo
            echo "#### Summary response"
            cat summary.json | jq '.'
          } >> "$GITHUB_STEP_SUMMARY"
